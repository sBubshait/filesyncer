name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-api:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "21"
          cache: "npm"
          cache-dependency-path: "./api/package-lock.json"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build API
        run: npm run build

  test-web:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./web

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "21"
          cache: "npm"
          cache-dependency-path: "./web/package-lock.json"

      - name: Install dependencies
        run: npm ci

      - name: Build Web
        run: npm run build

  docker:
    needs: [test-api, test-web]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: Docker

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push API
        uses: docker/build-push-action@v5
        with:
          platforms: linux/arm64
          context: ./api
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/filesyncer-api:latest

      - name: Build and push Web
        uses: docker/build-push-action@v6
        with:
          platforms: linux/arm64
          context: ./web
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/filesyncer-web:latest

  deploy:
    needs: docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' # Only deploy from main branch
    environment: Docker

    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /home/filesyncer
            docker compose pull
            docker compose up -d
